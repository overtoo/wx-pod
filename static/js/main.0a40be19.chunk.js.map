{"version":3,"sources":["logo.svg","BasicMenu.js","NavBar.js","Text.js","Player.js","Words.js","Reader.js","App.js","reportWebVitals.js","index.js"],"names":["BasicMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","id","undefined","onClick","event","currentTarget","Menu","onClose","MenuListProps","MenuItem","Reader","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","Text","getCurrentTime","setCurrentTime","fmtMSS","s","substr","activeSenIndex","i","hardcoded","textTrad","length","time","text","textSimp","mp3","className","map","item","index","Player","url","setGetCurrentTime","currentTime","useState","Audio","audio","playing","setPlaying","setTime","useEffect","window","addEventListener","document","getElementById","muted","play","interval","setInterval","clearInterval","pause","removeEventListener","useAudio","toggle","toFixed","Words","myWords","levels","uniq","Set","arr","j","tocfl","word","push","level","findLevel","filter","class","JSON","stringify","NavBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0a40be19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport \"./BasicMenu.css\";\n\nexport default function BasicMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"basic-button\"\n        aria-controls=\"basic-menu\"\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      >\n        Simplified\n      </Button>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem onClick={handleClose}>Simplified</MenuItem>\n        <MenuItem onClick={handleClose}>Traditional</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport BasicMenu from \"./BasicMenu\";\n\nfunction Reader() {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* iconbutton  stuff removed */}\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            WX-POD\n          </Typography>\n          <BasicMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Reader;\n","import React from \"react\";\nimport \"./Text.css\";\n\nfunction Text({ getCurrentTime, setCurrentTime }) {\n  //functions\n  //this function only works for under 10 minutes\n  function fmtMSS(s) {\n    return ((s - (s %= 60)) / 60 + (9 < s ? \":\" : \":0\") + s).substr(0, 4);\n  }\n\n  function activeSenIndex(getCurrentTime) {\n    for (let i = 1; i < hardcoded.textTrad.length; i++) {\n      if (hardcoded.textTrad[i].time > getCurrentTime) {\n        return i - 1;\n      }\n    }\n  }\n\n  const hardcoded = {\n    textTrad: [\n      { time: 0, text: \"最近這一兩天搬了新家\" },\n      { time: 3.8, text: \"我的好朋友借我車子讓我可以搬家\" },\n      { time: 6.8, text: \"我和台北的朋友\" },\n      { time: 8.3, text: \"趁半夜一兩點時開車搬家\" },\n      { time: 11.8, text: \"東西太多了因此來回了三趟\" },\n      { time: 14.8, text: \"總共搬了4個小時\" },\n      { time: 16.8, text: \"從晚上搬到了天亮\" },\n      { time: 19.4, text: \"我從新店搬到古亭捷運站附近\" },\n      { time: 23.2, text: \"位置就在牯嶺街（GuLing Street）\" },\n      { time: 25.1, text: \"牯嶺街在台灣早期是著名的書店街\" },\n      { time: 28.7, text: \"有非常多書局\" },\n      { time: 30.1, text: \"因此這個地區非常有人文氣息\" },\n      { time: 32.9, text: \"住家附近有公園、也有非常多的便利商店\" },\n      { time: 36.7, text: \"生活機能非常好\" },\n      { time: 38.3, text: \"現在住的地方有7個室友\" },\n      { time: 41.3, text: \"有博士班的學生、有醫生、有工程師、也有學生\" },\n      { time: 47.5, text: \"大家共用廚房跟客廳一起生活\" },\n      { time: 52.1, text: \"還有三隻貓會在客廳跟每個房間跑來跑去的\" },\n      { time: 56.1, text: \"希望未來共居生活（co-living）可以順順利利的\" },\n      { time: 61.13, text: \"\" },\n    ],\n    textSimp: [\"test\", \"test2\"],\n    mp3: ``,\n  };\n  return (\n    <div className=\"text\">\n      {hardcoded.textTrad.map((item, index) => (\n        <p>\n          {index === activeSenIndex(getCurrentTime) ? (\n            <div>\n              <span className=\"arrow red\">{\" ➡ \"}</span>\n              <span className=\"red-border\">\n                {fmtMSS(item.time)} {item.text}\n              </span>\n            </div>\n          ) : (\n            <div>\n              <span className=\"arrow\" onClick={() => setCurrentTime(item.time)}>\n                {\" ➡ \"}\n              </span>\n              <span>\n                {fmtMSS(item.time)} {item.text}\n              </span>\n            </div>\n          )}\n        </p>\n      ))}\n    </div>\n  );\n}\n\nexport default Text;\n","import React, { useState, useEffect } from \"react\";\n\nconst useAudio = (url, setGetCurrentTime, currentTime) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n  const [time, setTime] = useState(0);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    window.addEventListener(\"touchstart\", () => {\n      document.getElementById(\"audio\").muted = false;\n      document.getElementById(\"audio\").play();\n    });\n  });   \n\n  useEffect(() => {\n    if (currentTime) {\n      audio.currentTime = currentTime;\n    }\n  }, [currentTime]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setGetCurrentTime(audio.currentTime);\n      setTime(audio.currentTime);\n    }, 100);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n\n  useEffect(() => {\n    audio.addEventListener(\"ended\", () => setPlaying(false));\n    return () => {\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle, time];\n};\n\nconst Player = ({ url, setGetCurrentTime, currentTime }) => {\n  function fmtMSS(s) {\n    return ((s - (s %= 60)) / 60 + (9 < s ? \":\" : \":0\") + s).substr(0, 4);\n  }\n\n  function fmtMSSDecimal(s) {\n    return (s =\n      (s - (s %= 60)) / 60 +\n      (9 < s ? \":\" : \":0\") +\n      s +\n      (Number.isInteger(s) ? \".0\" : \"\"));\n  }\n  const [playing, toggle, time] = useAudio(url, setGetCurrentTime, currentTime);\n\n  return (\n    <div>\n      <button onClick={toggle}>{playing ? \"◼\" : \"▶\"}</button>{\" \"}\n      <span>{fmtMSS(time.toFixed(1))}</span>\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useState } from \"react\";\nimport tocfl from \"./tocfl.json\";\nimport \"./Words.css\";\n\nfunction Words() {\n  const myWords = [\n    \"最近\",\n    \"這\",\n    \"一\",\n    \"兩\",\n    \"天\",\n    \"搬\",\n    \"了\",\n    \"新\",\n    \"家\",\n    \"我\",\n    \"的\",\n    \"好朋友\",\n    \"借\",\n    \"我\",\n    \"車子\",\n    \"讓\",\n    \"我\",\n    \"可以\",\n    \"搬家\",\n    \"我\",\n    \"和\",\n    \"台北\",\n    \"的\",\n    \"朋友\",\n    \"趁\",\n    \"半夜\",\n    \"一\",\n    \"兩\",\n    \"點\",\n    \"時\",\n    \"開車\",\n    \"搬家\",\n    \"東西\",\n    \"太\",\n    \"多\",\n    \"了\",\n    \"因此\",\n    \"來回\",\n    \"了\",\n    \"三\",\n    \"趟\",\n    \"總共\",\n    \"搬\",\n    \"了\",\n    \"個\",\n    \"小時\",\n    \"從\",\n    \"晚上\",\n    \"搬\",\n    \"到\",\n    \"了\",\n    \"天亮\",\n    \"我\",\n    \"從\",\n    \"新店\",\n    \"搬\",\n    \"到\",\n    \"古亭\",\n    \"捷運\",\n    \"站\",\n    \"附近\",\n    \"位置\",\n    \"就\",\n    \"在\",\n    \"牯嶺\",\n    \"街\",\n    \"牯嶺\",\n    \"街\",\n    \"在\",\n    \"台灣\",\n    \"早期\",\n    \"是\",\n    \"著名\",\n    \"的\",\n    \"書店\",\n    \"街\",\n    \"有\",\n    \"非常多\",\n    \"書局\",\n    \"因此\",\n    \"這個\",\n    \"地區\",\n    \"非常\",\n    \"有\",\n    \"人文\",\n    \"氣息\",\n  ];\n\n  function findLevel() {\n    const uniq = [...new Set(myWords)];\n\n    let arr = [];\n    for (let i = 0; i < uniq.length; i++) {\n      for (let j = 0; j < tocfl.length; j++) {\n        if (uniq[i] === tocfl[j].word) {\n          arr.push({ word: uniq[i], level: tocfl[j].level });\n          i++;\n          j = 0;\n        }\n      }\n      arr.push({ word: uniq[i], level: \"???\" });\n    }\n    return arr;\n  }\n\n  const levels = findLevel();\n\n  // const tocflSorted = tocfl.sort(\n  //   (firstItem, secondItem) => firstItem.level - secondItem.level\n  // );\n\n  function levelOnly(level) {\n    return levels.filter((item) => item.level == level);\n  }\n\n  return (\n    <div>\n      <div className=\"levels-wrapper\">\n        {[1, 2, 3, 4, 5, 6, 7, \"pl\", \"???\"].map((item) => (\n          <div className=\"level-box\">\n            <p className=\"title\">{item > 0 ? \"Level \" + item : item}</p>\n            <p className=\"words\">\n              {levelOnly(item).map((item) => (\n                <span class=\"bubble\">{item.word}</span>\n              ))}\n            </p>\n          </div>\n        ))}\n      </div>\n      <div>{JSON.stringify([])}</div>\n    </div>\n  );\n}\n\nexport default Words;\n","import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Text from \"./Text\";\nimport Player from \"./Player\";\nimport Words from \"./Words\";\nimport \"./Reader.css\";\n\nfunction Reader() {\n  const [getCurrentTime, setGetCurrentTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  //   function clickHandleTemp(e) {\n  //     console.log(e.target);\n  //   }\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"player-wrapper\">\n        <Player\n          currentTime={currentTime}\n          setGetCurrentTime={setGetCurrentTime}\n          url=\"https://github.com/overtoo/test/raw/main/4489231.m4a\"\n        />\n      </div>\n      <div className=\"container\">\n        <div className=\"text-wrapper\">\n          <Text\n            getCurrentTime={getCurrentTime}\n            setCurrentTime={setCurrentTime}\n          />\n        </div>\n        <div className=\"words-wrapper\">\n          <Words />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Reader;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Reader from \"./Reader\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Reader />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}